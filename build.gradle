plugins {
	id 'java'
	id 'eclipse'
	id 'org.springframework.boot' version '2.1.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.6.RELEASE'
	id "com.palantir.docker" version "0.20.1"
}

group = 'org.adhuc.sample'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.11

repositories {
	mavenCentral()
}

sourceSets {
	acceptance {
		java {
			compileClasspath += main.compileClasspath + test.compileClasspath + main.output + test.output
			runtimeClasspath += main.runtimeClasspath + test.runtimeClasspath + main.output + test.output
			srcDir file('src/acceptance/java')
		}
		resources.srcDir file('src/acceptance/resources')
	}
}

configurations {
	acceptanceTestCompile.extendsFrom testCompile
	acceptanceTestRuntime.extendsFrom testRuntime
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-web')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.junit.jupiter:junit-jupiter-api')
	testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
}

test {
	useJUnitPlatform()
}

task acceptance(type: Test) {
	useJUnitPlatform()
	outputs.upToDateWhen { false }
	testClassesDirs = sourceSets.acceptance.output.classesDirs
	classpath = sourceSets.acceptance.runtimeClasspath
}

bootJar {
	archiveName = "${rootProject.name}.jar"
}

docker {
	name "${rootProject.name}:latest"
	files tasks.bootJar.outputs
	copySpec.into("build")
}
